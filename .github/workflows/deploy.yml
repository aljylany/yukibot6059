name: 🤖 نشر بوت يوكي

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: 🧪 اختبار البوت
    
    steps:
    - name: 📥 سحب الكود
      uses: actions/checkout@v4
      
    - name: 🐍 إعداد Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 تثبيت المكتبات
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 فحص الأخطاء
      run: |
        python -m py_compile main.py
        python -c "import main; print('✅ البوت يعمل بشكل طبيعي')"
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    name: 🚀 نشر البوت
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 سحب الكود
      uses: actions/checkout@v4
      
    - name: 🐍 إعداد Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 تثبيت المكتبات
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 📄 إنشاء ملف API
      run: |
        echo "AI " > api.txt
        echo "${{ secrets.GEMINI_API_KEY }}" >> api.txt
        echo "tokenbot" >> api.txt
        echo "${{ secrets.BOT_TOKEN }}" >> api.txt
        echo "apiyutube" >> api.txt
        echo "${{ secrets.YOUTUBE_API_KEY }}" >> api.txt
        echo "anthropic" >> api.txt
        echo "${{ secrets.ANTHROPIC_API_KEY }}" >> api.txt
        echo "openai" >> api.txt
        echo "${{ secrets.OPENAI_API_KEY }}" >> api.txt
        
    - name: 🗄️ إعداد قاعدة البيانات
      run: |
        python database_setup.py
        
    - name: 🤖 تشغيل البوت
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      run: |
        nohup python main.py &
        sleep 10
        echo "✅ تم تشغيل البوت بنجاح"

  docker:
    needs: test
    runs-on: ubuntu-latest
    name: 🐳 بناء Docker Image
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 سحب الكود
      uses: actions/checkout@v4
      
    - name: 🔧 إعداد Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🐳 بناء Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: yuki-bot:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max