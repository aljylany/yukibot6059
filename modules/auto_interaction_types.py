"""
أنواع التفاعلات التلقائية ليوكي - Auto Interaction Types
مجموعة متنوعة من الرسائل والتفاعلات التي يمكن ليوكي استخدامها لبدء المحادثات
"""

import random
import logging
from datetime import datetime
from typing import Dict, List, Optional, Tuple


class AutoInteractionTypes:
    """أنواع التفاعلات التلقائية المختلفة"""
    
    def __init__(self):
        # قوائم الرسائل المختلفة حسب النوع والوقت
        self.interactions = {
            'morning': {
                'greetings': [
                    "🌅 صباح الخير! كيف النوم؟ أنا صحيت من شوي وقررت أشرب قهوة يابانية 🍵",
                    "☀️ صباح النور! إيش خططكم لليوم؟ أنا عندي محاضرة بعدين بس بصراحة مو متحمس لها 😅",
                    "🌤️ أهلاً أهلاً! صباح جميل اليوم في اليابان، شو الجو عندكم؟",
                    "🌸 صباح الخير! بدأت أشم ريحة الساكورا هنا، ذكرني أطلع أصور شوي 📸",
                    "☕ يا جماعة، حد يعرف ليش القهوة اليابانية طعمها مختلف؟ أم أنا خيالي؟ 🤔"
                ],
                'questions': [
                    "🤔 سؤال غريب طرأ على بالي: لو كان عندكم قوة خارقة واحدة بس، إيش بتختاروا؟",
                    "📚 يا ترى، إيش أفضل طريقة لتعلم شيء جديد؟ أنا عالق في تعلم الطبخ الكوري 🍲",
                    "🎮 حد فيكم يلعب؟ أو عندكم هوايات غريبة؟ أنا مهووس جمع الطوابع القديمة 😅",
                    "🗾 إيش رأيكم باليابان؟ أم ما تعرفوا عنها غير الأنمي؟ 😂",
                    "🎯 ودي أسأل: إيش الشيء اللي تتمنوا تقولوه لنفسكم قبل 5 سنوات؟"
                ]
            },
            'afternoon': {
                'thoughts': [
                    "🍜 أكلت رامين للغداء وتذكرت أول مرة جربته... كانت كارثة حقيقية! 😂 إنتم إيش أكلتوا؟",
                    "📖 كنت أقرأ كتاب وصادفت فكرة غريبة: 'النجاح مو وصول لهدف، بل رحلة تعلم'، إيش رأيكم؟",
                    "🚃 ركبت القطار اليوم ولاحظت كل واحد منشغل بجواله... نفس المشكلة عندكم؟",
                    "🌧️ الجو ممطر هنا اليوم، والمطر في اليابان له جو خاص... حبيت أشارككم الشعور ☔",
                    "🎭 شفت عرض تقليدي ياباني اليوم، وكان رائع! حد فيكم شاف عروض تراثية في بلدكم؟"
                ],
                'personal_shares': [
                    "😅 موقف محرج صار معي: دخلت مطعم وطلبت باليابانية، بس اكتشفت إنه مطعم صيني! 🥢",
                    "🎓 المحاضرة اليوم كانت عن الذكاء الاصطناعي، وصراحة خفت إنه يستبدلنا! إنتم شو رأيكم؟ 🤖",
                    "🏃‍♂️ قررت أبدأ رياضة جديدة: الكاراتيه! بس لحد الآن تعلمت كيف أقع بطريقة صحيحة 😂",
                    "📱 جوالي انكسر اليوم وحسيت إني رجعت للقرن الماضي... كيف الناس عاشوا بدون جوالات؟",
                    "🍵 اكتشفت نوع شاي جديد هنا، طعمه غريب بس حلو... حد يحب يجرب حاجات جديدة مثلي؟"
                ]
            },
            'evening': {
                'discussions': [
                    "🌆 المساء هنا هادي ومريح... إيش أفضل وقت في اليوم بالنسبة لكم؟",
                    "🎵 أسمع موسيقى يابانية هادية الآن، حد منكم يحب الموسيقى الهادية؟ 🎶",
                    "🌙 الليل بدأ يطول هنا، وأنا نوع من الناس اللي يحبوا الليل... إنتم فريق نهار ولا ليل؟",
                    "📚 كنت أفكر: إيش الشيء اللي تعلمتوه هذا الأسبوع؟ أنا تعلمت إنه النوم مهم 😴",
                    "🍲 عشان نخلص اليوم بطريقة حلوة: إيش أكلتكم المفضلة عندما تكونوا حزينين؟"
                ],
                'philosophical': [
                    "💭 سؤال فلسفي: هل الذكريات الحلوة تصير أحلى مع الوقت، ولا نحن اللي نجملها؟",
                    "🌟 يا ترى، لو قدرنا نشوف نفسنا من 10 سنوات، إيش بيقولوا لنا؟",
                    "🌍 أحياناً أفكر إنه العالم صغير وكبير في نفس الوقت... حسيتوا بهاي الحالة؟",
                    "⚖️ إيش الفرق بين إنك تكون محق وإنك تكون سعيد؟ أم ممكن الاثنين مع بعض؟",
                    "🎯 هل النجاح يعني إنك وصلت لهدفك، ولا إنك استمتعت بالطريق؟"
                ]
            },
            'weekend': {
                'casual': [
                    "🎮 ويكند مريح! حد منكم يقضي الويكند في البيت مثلي؟ أم عندكم مغامرات؟",
                    "🍕 يوم العطلة = أكل غير صحي! إنتم نفس المشكلة؟ 😅",
                    "🛏️ النوم لوقت متأخر في الويكند... من أعظم الملذات! مين معي؟ 😴",
                    "📱 ويكند = وقت أضيعه على الانترنت، وبعدين أندم... قولوا لي إني مو الوحيد 😂",
                    "🎬 نصيحة فيلم أو مسلسل للويكند؟ أنا محتار إيش أشوف!"
                ],
                'fun': [
                    "🎲 لعبة سريعة: كل واحد يقول كلمة عشوائية، ونشوف إيش بيطلع! أنا أبدأ: سوشي 🍣",
                    "🤡 نكتة يابانية: ليش الساموراي ما يستخدموا مكنسة؟ لأنهم يفضلوا 'السيف'! (أعذروني) 😅",
                    "🎯 تحدي: احكوا لي أغرب شيء صار معكم هذا الأسبوع! أنا رايح أحكي بعدكم",
                    "🎨 فكرة مجنونة: لو كنتوا فنانين، إيش بترسموا الآن؟ أنا أفكر أرسم مانجا عن طالب عربي في اليابان!",
                    "🌟 لعبة: كل واحد يحكي عن شيء جميل شافه اليوم، حتى لو كان بسيط!"
                ]
            },
            'late_night': {
                'deep': [
                    "🌙 السهر له طعم مختلف... أفكاري تصير أعمق في الليل، إنتم كمان؟",
                    "⭐ أطل على النجوم هنا وأتساءل: يا ترى حد في مجرة ثانية يطل علينا؟",
                    "💫 الليل يخليني أفكر في أشياء عجيبة... مثل إنه كل نجمة ممكن تكون شمس لكوكب ثاني",
                    "🎭 في الليل الهادي، أحس إنه أقدر أكون نفسي الحقيقية... إنتم كمان تحسوا كذا؟",
                    "🌌 سؤال الليل: إيش الشيء اللي يخليكم تحسوا بالسلام الداخلي؟"
                ],
                'supportive': [
                    "💙 أعرف إنه الليل أحياناً يجيب أفكار صعبة... بس تذكروا إنكم مو لوحدكم",
                    "🤗 لو أي حد يحتاج يتكلم، أنا هنا... أحياناً التكلم يخفف الحمل",
                    "☕ سهران ومش قادر أنام؟ خلونا نتكلم عن شيء حلو... إيش يريحكم؟",
                    "🌟 تذكروا إنه حتى أصعب الأيام تنتهي، وبكرة فرصة جديدة تبدأ",
                    "💝 أحياناً أحتاج أقول: إنتوا رائعين، حتى لو ما تحسوا كذا دايماً"
                ]
            }
        }
        
        # أسئلة تفاعلية خاصة
        self.interactive_questions = [
            "🎯 لعبة سريعة: لو كان عندكم آلة زمن، أي عصر بتزوروا؟",
            "🤔 سؤال محيرني: هل الذكاء أهم من الطيبة؟",
            "🎨 إبداع: لو كنتوا مخترعين، إيش أول شيء بتخترعوا؟",
            "🌍 خيال: لو قدرتوا تغيروا شيء واحد في العالم، إيش بيكون؟",
            "🎭 تمثيل: اوصفوا شخصيتكم بثلاث كلمات بس!",
            "🍕 مهم: إيش أفضل بيتزا ممكن تحضروها؟",
            "📚 مكتبة: إيش آخر كتاب أو قصة أثرت فيكم؟",
            "🎵 موسيقى: إيش الأغنية اللي تسمعوها وقت الحزن؟",
            "🏠 بيت: إيش المكان المفضل لكم في البيت؟",
            "⭐ أحلام: إيش الحلم اللي ما زلتوا تسعوا له؟"
        ]
        
        # مواضيع يابانية ثقافية
        self.japanese_topics = [
            "🗾 هل تعرفوا إنه اليابان فيها أربع مواسم واضحة، وكل موسم له طقوسه الخاصة؟",
            "🍱 البينتو (علبة الطعام اليابانية) فن حقيقي هنا... الأمهات يصنعوا تحف! 🎨",
            "🎋 عندنا مهرجان اسمه 'تاناباتا' نكتب فيه أمنياتنا على ورق ونعلقها... حلو صح؟",
            "🏃‍♂️ هنا في اليابان، الناس يمشوا كثير وده سر صحتهم... إنتوا تمشوا كم يومياً؟",
            "🙇‍♂️ الانحناء هنا له معاني كثيرة: شكر، اعتذار، احترام... ثقافة عجيبة!",
            "🌸 الساكورا (أزهار الكرز) موسمها قصير بس الكل بيحتفل فيها... زي عيد الربيع عندكم؟"
        ]
        
        logging.info("✨ تم تهيئة أنواع التفاعلات التلقائية ليوكي")
    
    def get_random_interaction(self, interaction_type: str, context: Dict) -> Optional[str]:
        """الحصول على تفاعل عشوائي مناسب للوقت والسياق"""
        try:
            current_hour = context.get('current_hour', datetime.now().hour)
            is_weekend = context.get('is_weekend', False)
            silence_duration = context.get('silence_duration', 0)
            
            # تحديد نوع التفاعل
            if is_weekend and current_hour in [10, 11, 14, 15, 16, 20, 21]:
                time_category = 'weekend'
            elif current_hour >= 23 or current_hour <= 2:
                time_category = 'late_night'
            else:
                time_category = interaction_type
            
            # اختيار نوع فرعي من التفاعل
            if time_category in self.interactions:
                available_types = list(self.interactions[time_category].keys())
                sub_type = random.choice(available_types)
                
                # إضافة تنوع إضافي للمحادثات الطويلة
                if silence_duration > 60:  # أكثر من ساعة صمت
                    # أضف أسئلة تفاعلية أو مواضيع يابانية
                    if random.choice([True, False]):  # 50% احتمال
                        if random.choice([True, False]):
                            return random.choice(self.interactive_questions)
                        else:
                            return random.choice(self.japanese_topics)
                
                # اختيار رسالة عشوائية من النوع المحدد
                messages = self.interactions[time_category][sub_type]
                return random.choice(messages)
            
            # fallback للأسئلة التفاعلية
            return random.choice(self.interactive_questions)
            
        except Exception as e:
            logging.error(f"خطأ في اختيار التفاعل: {e}")
            return None
    
    def get_contextual_message(self, context: Dict) -> Optional[str]:
        """رسالة مخصصة حسب السياق الحالي"""
        try:
            active_users = context.get('active_users_count', 0)
            messages_24h = context.get('messages_24h', 0)
            silence_duration = context.get('silence_duration', 0)
            
            # رسائل خاصة حسب السياق
            if silence_duration > 120:  # أكثر من ساعتين
                return "🌙 هاي... إيش صار؟ المجموعة هادية كثير! كل واحد مشغول ولا الكل نايم؟ 😅"
            
            elif active_users >= 10:  # مجموعة نشيطة
                return "🎉 وااو! المجموعة مليانة حيوية! أحس بطاقة إيجابية هنا... إيش السبب؟ 😊"
            
            elif messages_24h > 100:  # نشاط عالي
                return "📈 يا عالم! النشاط اليوم رهيب هنا... حاسس إني مفوت على شيء مهم! 🤔"
            
            else:
                # رسالة عامة حسب الوقت
                return self.get_random_interaction(context.get('interaction_type', 'general'), context)
            
        except Exception as e:
            logging.error(f"خطأ في إنشاء رسالة السياق: {e}")
            return None
    
    def get_conversation_starter(self, topic: str = None) -> str:
        """بداية محادثة حول موضوع معين"""
        try:
            if topic == 'food':
                starters = [
                    "🍜 جوعان وأفكر إيش أكل... إنتوا إيش تقترحوا؟ (ملاحظة: مو موجود في اليابان 😅)",
                    "🍣 جربت السوشي لأول مرة هنا وكان... تجربة! حد منكم يحب الأكل الياباني؟",
                    "🍵 الشاي الأخضر صار إدماني هنا... أفضل من القهوة! مين معي؟"
                ]
            elif topic == 'culture':
                starters = [
                    "🎭 شفت عرض كابوكي اليوم، وفهمت صفر بس كان رائع! عندكم عروض تراثية مشابهة؟",
                    "🏮 المهرجانات هنا لها جو خاص... حد يعرف مهرجانات حلوة في بلدكم؟",
                    "🙇‍♂️ اليابانيين مهذبين بشكل مو طبيعي... أحياناً أحس إني وقح! 😅"
                ]
            elif topic == 'technology':
                starters = [
                    "🚅 قطارات اليابان سريعة لدرجة مرعبة! النقل العام عندكم كيف؟",
                    "🤖 الروبوتات هنا في كل مكان... حتى في المطاعم! شو رأيكم بالمستقبل الرقمي؟",
                    "📱 التكنولوجيا هنا متقدمة بس معقدة... أم أنا اللي غبي؟ 😂"
                ]
            else:
                # موضوع عام
                starters = [
                    "💭 كنت أفكر في شيء... ليش الحياة معقدة وبسيطة في نفس الوقت؟",
                    "🌟 اليوم كان مختلف شوي... حسيت إنه تعلمت شيء جديد عن نفسي",
                    "🎯 سؤال جاي من اليابان: إيش يخلي الإنسان سعيد حقاً؟"
                ]
            
            return random.choice(starters)
            
        except Exception as e:
            logging.error(f"خطأ في إنشاء بداية المحادثة: {e}")
            return "🤔 عندي شعور إنه المجموعة تحتاج شوي حركة... إيش رأيكم نحكي شوي؟"


# إنشاء نسخة مشتركة
auto_interaction_types = AutoInteractionTypes()