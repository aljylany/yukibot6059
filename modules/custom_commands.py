"""
ูุธุงู ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ
Custom Commands System
"""

import logging
import random
from typing import Dict, List, Optional, Any
from aiogram import Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from config.hierarchy import has_permission, AdminLevel
from database.operations import execute_query
from utils.states import CustomCommandsStates


# ูุงููุณ ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ ุงููุญููุฉ ูู ุงูุฐุงูุฑุฉ
CUSTOM_COMMANDS: Dict[int, Dict[str, List[str]]] = {}  # {group_id: {keyword: [responses]}}


async def load_custom_commands():
    """ุชุญููู ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        commands = await execute_query(
            "SELECT chat_id, keyword, responses FROM custom_commands",
            fetch_all=True
        )
        
        CUSTOM_COMMANDS.clear()
        
        if commands:
            for command in commands:
                chat_id = command[0] if isinstance(command, tuple) else command['chat_id']
                keyword = command[1] if isinstance(command, tuple) else command['keyword']
                responses = command[2] if isinstance(command, tuple) else command['responses']
                
                if chat_id not in CUSTOM_COMMANDS:
                    CUSTOM_COMMANDS[chat_id] = {}
                
                # ุชุญููู ุงููุตูุต ุงููุญููุธุฉ ุฅูู ูุงุฆูุฉ
                response_list = responses.split('|||') if responses else []
                CUSTOM_COMMANDS[chat_id][keyword] = response_list
        
        logging.info("ุชู ุชุญููู ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ")
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุชุญููู ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ: {e}")


async def save_custom_command(chat_id: int, keyword: str, responses: List[str], created_by: int = None) -> bool:
    """ุญูุธ ุฃูุฑ ูุฎุตุต ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        # ุฏูุฌ ุงูุฑุฏูุฏ ูู ูุต ูุงุญุฏ
        responses_text = '|||'.join(responses)
        
        await execute_query(
            "INSERT OR REPLACE INTO custom_commands (chat_id, keyword, responses, created_by, created_at) VALUES (?, ?, ?, ?, datetime('now'))",
            (chat_id, keyword, responses_text, created_by or 0)
        )
        
        # ุชุญุฏูุซ ุงูุฐุงูุฑุฉ
        if chat_id not in CUSTOM_COMMANDS:
            CUSTOM_COMMANDS[chat_id] = {}
        
        CUSTOM_COMMANDS[chat_id][keyword] = responses
        
        logging.info(f"ุชู ุญูุธ ุฃูุฑ ูุฎุตุต: {keyword} ูู ุงููุฌููุนุฉ {chat_id}")
        return True
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุญูุธ ุงูุฃูุฑ ุงููุฎุตุต: {e}")
        return False


async def delete_custom_command(chat_id: int, keyword: str) -> bool:
    """ุญุฐู ุฃูุฑ ูุฎุตุต"""
    try:
        await execute_query(
            "DELETE FROM custom_commands WHERE chat_id = ? AND keyword = ?",
            (chat_id, keyword)
        )
        
        # ุชุญุฏูุซ ุงูุฐุงูุฑุฉ
        if chat_id in CUSTOM_COMMANDS and keyword in CUSTOM_COMMANDS[chat_id]:
            del CUSTOM_COMMANDS[chat_id][keyword]
        
        logging.info(f"ุชู ุญุฐู ุฃูุฑ ูุฎุตุต: {keyword} ูู ุงููุฌููุนุฉ {chat_id}")
        return True
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุญุฐู ุงูุฃูุฑ ุงููุฎุตุต: {e}")
        return False


async def get_custom_response(chat_id: int, message_text: str) -> Optional[str]:
    """ุงูุจุญุซ ุนู ุฑุฏ ูุฎุตุต ููุฑุณุงูุฉ"""
    try:
        if chat_id not in CUSTOM_COMMANDS:
            return None
        
        message_lower = message_text.lower().strip()
        
        # ุงูุจุญุซ ุนู ูููุฉ ููุชุงุญูุฉ ูุทุงุจูุฉ
        for keyword, responses in CUSTOM_COMMANDS[chat_id].items():
            # ูุญุต ุงูุชุทุงุจู ุงูุฏููู ุฃู ุงูุงุญุชูุงุก
            if (message_lower == keyword.lower() or 
                keyword.lower() in message_lower or
                any(word.strip() == keyword.lower() for word in message_lower.split())):
                
                if responses:
                    return random.choice(responses)
        
        return None
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุฑุฏ ูุฎุตุต: {e}")
        return None


async def handle_add_command(message: Message, state: FSMContext):
    """ูุนุงูุฌ ุฅุถุงูุฉ ุฃูุฑ ุฌุฏูุฏ"""
    try:
        # ุงูุชุญูู ุงูุฃููู
        if not message.from_user or message.chat.type == 'private':
            return False
        
        text = message.text
        
        # ุงูุชุญูู ุฃููุงู ูู ุฃู ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ุฃูุฑ ุงูุฅุถุงูุฉ
        if text.startswith('ุงุถุงูุฉ ุงูุฑ ') or text.startswith('ุฅุถุงูุฉ ุฃูุฑ ') or text.strip() == 'ุงุถุงูุฉ ุงูุฑ' or text.strip() == 'ุฅุถุงูุฉ ุฃูุฑ':
            # ุงูุขู ูุชุญูู ูู ุงูุตูุงุญูุงุช
            user_id = message.from_user.id
            chat_id = message.chat.id
            
            # ูุญุต ุงูุตูุงุญูุงุช - ุงููุดุฑููู ููุง ููู
            if not has_permission(user_id, AdminLevel.MODERATOR, chat_id):
                sarcastic_responses = [
                    "๐ ูุงูุช ููู ุนุดุงู ุชุถูู ุฃูุงูุฑุ ุฃูุง ูููู ูุด ุจูุช ุนุงุฏู!",
                    "๐ ุตูุงุญูุงุชู ูุญุฏูุฏุฉ ุฌุฏุงู... ุญุงูู ุชููู ูุดุฑู ุฃููุงู!",
                    "๐ ุฃูุงูุฑ ูุฎุตุตุฉุ ูุฐู ูููุจุงุฑ ููุทุ ุนุฐุฑุงู!",
                    "๐คญ ุฃุนุชูุฏ ุฃูู ุชุฎูุท ุจููู ูุจูู ุจูุช ุขุฎุฑุ ุฃูุง ูููู ุงูุฐูู!",
                    "๐ ูุฐู ููุฒุฉ VIP ูุง ุตุฏูููุ ุงุฑุฌุน ููุง ุชุตูุฑ ูุดุฑู!"
                ]
                
                await message.reply(random.choice(sarcastic_responses))
                return True  # ุชู ุงูุชุนุงูู ูุน ุงูุฑุณุงูุฉ ูููู ุจุฎุทุฃ ุตูุงุญูุงุช
        
        if text.startswith('ุงุถุงูุฉ ุงูุฑ ') or text.startswith('ุฅุถุงูุฉ ุฃูุฑ '):
            # ุงุณุชุฎุฑุงุฌ ุงููููุฉ ุงูููุชุงุญูุฉ
            parts = text.split(' ', 2)
            if len(parts) < 3:
                await message.reply(
                    "โ **ุทุฑููุฉ ุงูุงุณุชุฎุฏุงู:**\n\n"
                    "`ุงุถุงูุฉ ุงูุฑ [ุงููููุฉ ุงูููุชุงุญูุฉ] [ุงูุฑุฏ]`\n\n"
                    "**ูุซุงู:**\n"
                    "`ุงุถุงูุฉ ุงูุฑ ูุฑุญุจุง ุฃููุงู ูุณููุงู ุจู ูู ุงููุฌููุนุฉ!`"
                )
                return True
            
            keyword = parts[2].split()[0]  # ุฃูู ูููุฉ ุจุนุฏ "ุงุถุงูุฉ ุงูุฑ"
            response = ' '.join(parts[2].split()[1:])  # ุจุงูู ุงููุต
            
            if not keyword or not response:
                await message.reply(
                    "โ **ูุฌุจ ุชุญุฏูุฏ ุงููููุฉ ุงูููุชุงุญูุฉ ูุงูุฑุฏ**\n\n"
                    "**ูุซุงู:**\n"
                    "`ุงุถุงูุฉ ุงูุฑ ูุฑุญุจุง ุฃููุงู ูุณููุงู ุจู ูู ุงููุฌููุนุฉ!`"
                )
                return True
            
            # ุญูุธ ุงูุฃูุฑ
            if await save_custom_command(chat_id, keyword, [response], user_id):
                await message.reply(
                    f"โ **ุชู ุฅุถุงูุฉ ุงูุฃูุฑ ุจูุฌุงุญ!**\n\n"
                    f"๐ **ุงููููุฉ ุงูููุชุงุญูุฉ:** `{keyword}`\n"
                    f"๐ฌ **ุงูุฑุฏ:** {response}\n\n"
                    f"ุงูุขู ุนูุฏูุง ููุชุจ ุฃู ุดุฎุต `{keyword}` ุณูุฑุฏ ุงูุจูุช ุจู: {response}"
                )
            else:
                await message.reply("โ ูุดู ูู ุฅุถุงูุฉ ุงูุฃูุฑุ ุญุงูู ูุฑุฉ ุฃุฎุฑู")
            
            return True
        
        elif text.strip() == 'ุงุถุงูุฉ ุงูุฑ' or text.strip() == 'ุฅุถุงูุฉ ุฃูุฑ':
            # ูุถุน ุงููุณุชุฎุฏู ูู ุญุงูุฉ ุงูุชุธุงุฑ ุงููููุฉ ุงูููุชุงุญูุฉ
            await state.set_state(CustomCommandsStates.waiting_keyword)
            await message.reply(
                "๐ฏ **ุฅุถุงูุฉ ุฃูุฑ ุฌุฏูุฏ**\n\n"
                "1๏ธโฃ ุงูุชุจ ุงููููุฉ ุงูููุชุงุญูุฉ ุงูุชู ุณุชูุนู ุงูุฃูุฑ\n\n"
                "**ูุซุงู:** `ูุฑุญุจุง` ุฃู `ููุงููู` ุฃู `ูุนูููุงุช`\n\n"
                "๐ซ **ุฃูุบู ุงูุนูููุฉ:** `/cancel`"
            )
            return True
        
        return False
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุฅุถุงูุฉ ุงูุฃูุฑ: {e}")
        return False


async def handle_delete_command(message: Message):
    """ูุนุงูุฌ ุญุฐู ุฃูุฑ"""
    try:
        # ุงูุชุญูู ุงูุฃููู
        if not message.from_user or message.chat.type == 'private':
            return False
        
        text = message.text
        
        # ุงูุชุญูู ูู ุฃู ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ุฃูุฑ ุงูุญุฐู
        if text.startswith('ุญุฐู ุงูุฑ ') or text.startswith('ุญุฐู ุฃูุฑ '):
            # ุงูุชุญูู ูู ุงูุตูุงุญูุงุช
            user_id = message.from_user.id
            chat_id = message.chat.id
            
            # ูุญุต ุงูุตูุงุญูุงุช - ุงููุดุฑููู ููุง ููู
            if not has_permission(user_id, AdminLevel.MODERATOR, chat_id):
                await message.reply("โ ูุฐุง ุงูุฃูุฑ ูุชุงุญ ูููุดุฑููู ููุง ููู ููุท")
                return True  # ุชู ุงูุชุนุงูู ูุน ุงูุฑุณุงูุฉ ูููู ุจุฎุทุฃ ุตูุงุญูุงุช
            
            # ุงุณุชุฎุฑุงุฌ ุงููููุฉ ุงูููุชุงุญูุฉ
            parts = text.split(' ', 2)
            if len(parts) < 3:
                await message.reply(
                    "โ **ุทุฑููุฉ ุงูุงุณุชุฎุฏุงู:**\n\n"
                    "`ุญุฐู ุงูุฑ [ุงููููุฉ ุงูููุชุงุญูุฉ]`\n\n"
                    "**ูุซุงู:**\n"
                    "`ุญุฐู ุงูุฑ ูุฑุญุจุง`"
                )
                return True
            
            keyword = parts[2].strip()
            
            # ุงูุชุญูู ูู ูุฌูุฏ ุงูุฃูุฑ
            if chat_id not in CUSTOM_COMMANDS or keyword not in CUSTOM_COMMANDS[chat_id]:
                await message.reply(f"โ ูุง ููุฌุฏ ุฃูุฑ ุจุงููููุฉ ุงูููุชุงุญูุฉ: `{keyword}`")
                return True
            
            # ุญุฐู ุงูุฃูุฑ
            if await delete_custom_command(chat_id, keyword):
                await message.reply(
                    f"โ **ุชู ุญุฐู ุงูุฃูุฑ ุจูุฌุงุญ!**\n\n"
                    f"๐ **ุงููููุฉ ุงููุญุฐููุฉ:** `{keyword}`"
                )
            else:
                await message.reply("โ ูุดู ูู ุญุฐู ุงูุฃูุฑุ ุญุงูู ูุฑุฉ ุฃุฎุฑู")
            
            return True
        
        return False
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุญุฐู ุงูุฃูุฑ: {e}")
        return False


async def handle_list_commands(message: Message):
    """ูุนุงูุฌ ุนุฑุถ ูุงุฆูุฉ ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ"""
    try:
        if message.chat.type == 'private':
            return False
        
        chat_id = message.chat.id
        
        if chat_id not in CUSTOM_COMMANDS or not CUSTOM_COMMANDS[chat_id]:
            await message.reply("๐ **ูุง ุชูุฌุฏ ุฃูุงูุฑ ูุฎุตุตุฉ ูู ูุฐู ุงููุฌููุนุฉ**")
            return True
        
        commands_list = []
        for keyword, responses in CUSTOM_COMMANDS[chat_id].items():
            commands_list.append(f"๐น `{keyword}` - {len(responses)} ุฑุฏ")
        
        if commands_list:
            await message.reply(
                f"๐ **ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ ({len(commands_list)}):**\n\n" +
                "\n".join(commands_list) +
                "\n\n๐ก **ุงุณุชุฎุฏู:** `ุญุฐู ุงูุฑ [ุงููููุฉ]` ูุญุฐู ุฃูุฑ"
            )
        
        return True
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุนุฑุถ ูุงุฆูุฉ ุงูุฃูุงูุฑ: {e}")
        return False


async def handle_custom_commands_states(message: Message, state: FSMContext, current_state: str):
    """ูุนุงูุฌ ุญุงูุงุช ุฅุถุงูุฉ ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ"""
    try:
        if current_state == CustomCommandsStates.waiting_keyword.state:
            # ุญูุธ ุงููููุฉ ุงูููุชุงุญูุฉ ูุงูุชุธุงุฑ ุงูุฑุฏ
            keyword = message.text.strip()
            
            if not keyword:
                await message.reply("โ ูุฑุฌู ูุชุงุจุฉ ูููุฉ ููุชุงุญูุฉ ุตุญูุญุฉ")
                return
            
            # ุญูุธ ุงููููุฉ ุงูููุชุงุญูุฉ ูู ุงูุจูุงูุงุช
            await state.update_data(keyword=keyword)
            await state.set_state(CustomCommandsStates.waiting_response)
            
            await message.reply(
                f"โ **ุชู ุญูุธ ุงููููุฉ:** `{keyword}`\n\n"
                f"2๏ธโฃ **ุงูุขู ุงูุชุจ ุงูุฑุฏ ูููููุฉ ุงูููุชุงุญูุฉ**\n\n"
                f"**ูุซุงู:** ุฃููุงู ูุณููุงู ุจู ูู ูุฌููุนุชูุง ุงูุฑุงุฆุนุฉ!\n\n"
                f"๐ซ **ุฃูุบู ุงูุนูููุฉ:** `/cancel`"
            )
        
        elif current_state == CustomCommandsStates.waiting_response.state:
            # ุญูุธ ุงูุฑุฏ ูุงูุชูุงู ุงูุนูููุฉ
            response = message.text.strip()
            
            if not response:
                await message.reply("โ ูุฑุฌู ูุชุงุจุฉ ุฑุฏ ุตุญูุญ")
                return
            
            # ุงูุญุตูู ุนูู ุงููููุฉ ุงูููุชุงุญูุฉ
            data = await state.get_data()
            keyword = data.get('keyword')
            
            if not keyword:
                await message.reply("โ ุญุฏุซ ุฎุทุฃุ ูุฑุฌู ุงูุจุฏุก ูู ุฌุฏูุฏ")
                await state.clear()
                return
            
            # ุญูุธ ุงูุฃูุฑ
            chat_id = message.chat.id
            user_id = message.from_user.id
            if await save_custom_command(chat_id, keyword, [response], user_id):
                await message.reply(
                    f"โ **ุชู ุฅุถุงูุฉ ุงูุฃูุฑ ุจูุฌุงุญ!**\n\n"
                    f"๐ **ุงููููุฉ ุงูููุชุงุญูุฉ:** `{keyword}`\n"
                    f"๐ฌ **ุงูุฑุฏ:** {response}\n\n"
                    f"ุงูุขู ุนูุฏูุง ููุชุจ ุฃู ุดุฎุต `{keyword}` ุณูุฑุฏ ุงูุจูุช ุจู: {response}"
                )
            else:
                await message.reply("โ ูุดู ูู ุฅุถุงูุฉ ุงูุฃูุฑุ ุญุงูู ูุฑุฉ ุฃุฎุฑู")
            
            await state.clear()
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุญุงูุงุช ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ: {e}")
        await message.reply("โ ุญุฏุซ ุฎุทุฃุ ุชู ุฅูุบุงุก ุงูุนูููุฉ")
        await state.clear()


async def handle_custom_commands_message(message: Message) -> bool:
    """ูุญุต ุงูุฑุณุงุฆู ููุฃูุงูุฑ ุงููุฎุตุตุฉ"""
    try:
        if message.chat.type == 'private':
            return False
        
        text = message.text
        if not text:
            return False
        
        # ูุญุต ุฃูุงูุฑ ุงูุฅุฏุงุฑุฉ ุฃููุงู
        if text.startswith('ุงุถุงูุฉ ุงูุฑ') or text.startswith('ุฅุถุงูุฉ ุฃูุฑ'):
            return False  # ุณูุชู ูุนุงูุฌุชูุง ูู handle_add_command
        
        if text.startswith('ุญุฐู ุงูุฑ') or text.startswith('ุญุฐู ุฃูุฑ'):
            return False  # ุณูุชู ูุนุงูุฌุชูุง ูู handle_delete_command
        
        if text.strip() == 'ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ' or text.strip() == 'ุงูุงูุงูุฑ ุงููุฎุตุตุฉ':
            return False  # ุณูุชู ูุนุงูุฌุชูุง ูู handle_list_commands
        
        # ุงูุจุญุซ ุนู ุฑุฏ ูุฎุตุต
        chat_id = message.chat.id
        custom_response = await get_custom_response(chat_id, text)
        
        if custom_response:
            await message.reply(custom_response)
            return True
        
        return False
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌ ุงูุฃูุงูุฑ ุงููุฎุตุตุฉ: {e}")
        return False